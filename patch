diff --git a/cli.sh b/cli.sh
index 0f6b135..afe2079 100755
--- a/cli.sh
+++ b/cli.sh
@@ -96,9 +96,15 @@ cli_init() {
   if has_docker_for_windows_client; then
     REFERENCE_ENVIRONMENT_FILE=$(convert_posix_to_windows $(echo "${CODENVY_CONFIG}/${CODENVY_ENVIRONMENT_FILE}"))
     REFERENCE_COMPOSE_FILE=$(convert_posix_to_windows $(echo "${CODENVY_INSTANCE}/${CODENVY_COMPOSE_FILE}"))
+    CODENVY_INSTANCE=$(convert_posix_to_windows $(echo "${CODENVY_INSTANCE:-${DEFAULT_CODENVY_INSTANCE}}"))
+    CODENVY_CONFIG=$(convert_posix_to_windows $(echo "${CODENVY_CONFIG:-${DEFAULT_CODENVY_CONFIG}}"))
+    CODENVY_BACKUP_FOLDER=$(convert_posix_to_windows $(echo "${CODENVY_BACKUP_FOLDER:-${DEFAULT_CODENVY_BACKUP_FOLDER}}"))
   else
     REFERENCE_ENVIRONMENT_FILE="${CODENVY_CONFIG}/${CODENVY_ENVIRONMENT_FILE}"
     REFERENCE_COMPOSE_FILE="${CODENVY_INSTANCE}/${CODENVY_COMPOSE_FILE}"
+    CODENVY_INSTANCE=${CODENVY_INSTANCE:-${DEFAULT_CODENVY_INSTANCE}}
+    CODENVY_CONFIG=${CODENVY_CONFIG:-${DEFAULT_CODENVY_CONFIG}}
+    CODENVY_BACKUP_FOLDER="${CODENVY_BACKUP_FOLDER:-${DEFAULT_CODENVY_BACKUP_FOLDER}}"
   fi
 
   DOCKER_CONTAINER_NAME_PREFIX="codenvy_"
@@ -841,12 +847,12 @@ cmd_config() {
   # Replace certain environment file lines with wind
   if has_docker_for_windows_client; then
     info "config" "Customizing docker-compose for Windows"
-    CODENVY_ENVFILE_REGISTRY=$(convert_posix_to_windows $(echo \
-                                   "${CODENVY_INSTANCE}/config/registry/registry.env"))
-    CODENVY_ENVFILE_POSTGRES=$(convert_posix_to_windows $(echo \
-                                   "${CODENVY_INSTANCE}/config/postgres/postgres.env"))
-    CODENVY_ENVFILE_CODENVY=$(convert_posix_to_windows $(echo \
-                                   "${CODENVY_INSTANCE}/config/codenvy/$CHE_MINI_PRODUCT_NAME.env"))
+    CODENVY_ENVFILE_REGISTRY="${CODENVY_INSTANCE}\\\config\\\registry\\\registry.env"
+    CODENVY_ENVFILE_POSTGRES="${CODENVY_INSTANCE}\\\config\\\postgres\\\postgres.env"
+    CODENVY_ENVFILE_CODENVY="${CODENVY_INSTANCE}\\\config\\\codenvy\\\\$CHE_MINI_PRODUCT_NAME.env"
+    echo $CODENVY_ENVFILE_REGISTRY
+    echo $CODENVY_ENVFILE_POSTGRES
+    echo $CODENVY_ENVFILE_CODENVY
     sed "s|^.*registry\.env.*$|\ \ \ \ \ \ \-\ \'${CODENVY_ENVFILE_REGISTRY}\'|" -i "${REFERENCE_COMPOSE_FILE}"
     sed "s|^.*postgres\.env.*$|\ \ \ \ \ \ \-\ \'${CODENVY_ENVFILE_POSTGRES}\'|" -i "${REFERENCE_COMPOSE_FILE}"
     sed "s|^.*codenvy\.env.*$|\ \ \ \ \ \ \-\ \'${CODENVY_ENVFILE_CODENVY}\'|" -i "${REFERENCE_COMPOSE_FILE}"
@@ -894,17 +900,17 @@ cmd_start() {
   text   "         port 80 (http):       $(port_open 80 && echo "${GREEN}[AVAILABLE]${NC}" || echo "${RED}[ALREADY IN USE]${NC}") \n"
   text   "         port 443 (https):     $(port_open 443 && echo "${GREEN}[AVAILABLE]${NC}" || echo "${RED}[ALREADY IN USE]${NC}") \n"
   text   "         port 5000 (registry): $(port_open 5000 && echo "${GREEN}[AVAILABLE]${NC}" || echo "${RED}[ALREADY IN USE]${NC}") \n"
-  if ! $(port_open 80) || ! $(port_open 443) || ! $(port_open 5000); then
-    error "Ports required to run $CHE_MINI_PRODUCT_NAME are used by another program. Aborting..."
-    return 1;
-  fi
+  # if ! $(port_open 80) || ! $(port_open 443) || ! $(port_open 5000); then
+  #   error "Ports required to run $CHE_MINI_PRODUCT_NAME are used by another program. Aborting..."
+  #   return 1;
+  # fi
   text "\n"
 
   # Start Codenvy
   # Note bug in docker requires relative path, not absolute path to compose file
   info "start" "Starting containers..."
   log "docker-compose --file=\"${REFERENCE_COMPOSE_FILE}\" -p=$CHE_MINI_PRODUCT_NAME up -d >> \"${LOGS}\" 2>&1"
-  docker-compose --file="${REFERENCE_COMPOSE_FILE}" -p=$CHE_MINI_PRODUCT_NAME up -d >> "${LOGS}" 2>&1
+  docker-compose --file="${REFERENCE_COMPOSE_FILE}" -p=$CHE_MINI_PRODUCT_NAME up -d >> "${LOGS}"
   check_if_booted
 }
 
@@ -1081,16 +1087,33 @@ cmd_backup() {
   fi
 
   info "backup" "Saving configuration..."
+  echo ${CODENVY_CONFIG}
+  echo ${CODENVY_INSTANCE}
+  echo ${CODENVY_BACKUP_FOLDER}
+
   docker run --rm \
     -v "${CODENVY_CONFIG}":/root/codenvy-config \
     -v "${CODENVY_BACKUP_FOLDER}":/root/backup \
     alpine sh -c "tar czf /root/backup/${CODENVY_CONFIG_BACKUP_FILE_NAME} -C /root/codenvy-config ."
 
   info "backup" "Saving instance data..."
+  # if windows we backup data volume
+
+  if has_docker_for_windows_client; then
+echo 1
+    docker run --rm \
+    -v "${CODENVY_INSTANCE}":/root/codenvy-instance \
+    -v "${CODENVY_BACKUP_FOLDER}":/root/backup \
+    -v codenvy-postgresql-volume:/root/codenvy-instance/data/postgres \
+    alpine sh -c "tar czf /root/backup/${CODENVY_INSTANCE_BACKUP_FILE_NAME} -C /root/codenvy-instance . --exclude=logs ${TAR_EXTRA_EXCLUDE}"
+  else
+
   docker run --rm \
     -v "${CODENVY_INSTANCE}":/root/codenvy-instance \
     -v "${CODENVY_BACKUP_FOLDER}":/root/backup \
     alpine sh -c "tar czf /root/backup/${CODENVY_INSTANCE_BACKUP_FILE_NAME} -C /root/codenvy-instance . --exclude=logs ${TAR_EXTRA_EXCLUDE}"
+  fi
+
 }
 
 cmd_restore() {
@@ -1133,10 +1156,24 @@ cmd_restore() {
 
   info "restore" "Recovering instance data..."
   mkdir -p "${CODENVY_INSTANCE}"
+  if has_docker_for_windows_client; then
+    log "docker volume rm codenvy-postgresql-volume >> \"${LOGS}\" 2>&1 || true"
+    docker volume rm codenvy-postgresql-volume >> "${LOGS}" 2>&1 || true
+    log "docker volume create --name=codenvy-postgresql-volume >> \"${LOGS}\""
+    docker volume create --name=codenvy-postgresql-volume >> "${LOGS}"
+
   docker run --rm \
     -v "${CODENVY_INSTANCE}":/root/codenvy-instance \
     -v "${CODENVY_BACKUP_FOLDER}/${CODENVY_INSTANCE_BACKUP_FILE_NAME}":"/root/backup/${CODENVY_INSTANCE_BACKUP_FILE_NAME}" \
+    -v codenvy-postgresql-volume:/root/codenvy-instance/data/postgres \
     alpine sh -c "tar xf /root/backup/${CODENVY_INSTANCE_BACKUP_FILE_NAME} -C /root/codenvy-instance"
+  
+  else
+  docker run --rm \
+    -v "${CODENVY_INSTANCE}":/root/codenvy-instance \
+    -v "${CODENVY_BACKUP_FOLDER}/${CODENVY_INSTANCE_BACKUP_FILE_NAME}":"/root/backup/${CODENVY_INSTANCE_BACKUP_FILE_NAME}" \
+    alpine sh -c "tar xf /root/backup/${CODENVY_INSTANCE_BACKUP_FILE_NAME} -C /root/codenvy-instance"
+  fi
 }
 
 cmd_offline() {
